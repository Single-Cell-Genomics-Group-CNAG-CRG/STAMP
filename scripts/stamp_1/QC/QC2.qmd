---
title: "Quality Control P2 - Stamp 1"
subtitle: "Emanuele Pitino"
date: "`r Sys.Date()`"
format: 
  html:
    theme: superhero
    smooth-scroll: true
    code-fold: true
    self-contained: true
    toc: true
    toc_float: 
      collapsed: false
      smooth_scroll: true
editor: source
editor_options: 
  chunk_output_type: console
execute:
  echo: true
  fig-width: 16     
  fig-height: 12 
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(fig.width = 18, fig.height = 16)
```

## Libraries
```{r}
suppressPackageStartupMessages({
  library(SingleCellExperiment)
  library(tidyverse)
  library(dplyr)
  library(patchwork)
  library(grid)
  library(ggpubr)
  library(here)
  library(scater)
  library(scuttle)
  library(glue)
  library(scran)
  library(patchwork)
  library(qs)
  library(data.table)
  library(scales)
})
```

## Data loading
```{r}
dir <- glue("{here()}/scripts")
# Parameters and paths
source(glue("{dir}/misc/paths.R"))
source(glue("{dir}/misc/BIN.R"))

stamp <- "stamp_1"
sample <- "PBMCS"

datadir <- glue("{proj_dir}/data/{stamp}")
sce <- qread(glue("{datadir}/qc_sce.qs"))
```

## ColData
```{r}
cd <- as.data.frame(colData(sce))
cd <- cd[sample(rownames(cd)),] # shuffle

nfeat <- grep("nFeature", colnames(cd), value = T)
median <- grep("median", colnames(cd), value = T)
nCount <- grep("nCount", colnames(cd), value = T)
mean <- grep("Mean", colnames(cd), value = T)
unass <- "unassignedTranscripts"
```

```{r}
#cd <- cd[sample(rownames(cd),1000),]
```

## plot function
```{r}
plotf <- function(var){
 ggplot(cd, aes(x = CenterX_global_px, y = CenterY_global_px, color = log(!!sym(var)))) + 
  scale_color_viridis_c() + 
  geom_point(size = 0.3, shape = 16) +
  theme_bw() + 
  scale_x_continuous(labels = scientific_10) + 
  scale_y_continuous(labels = scientific_10) +
  theme(panel.grid = element_blank(), text = element_text(colour = "black", size = 20), 
        axis.text = element_text(colour = "black", size = 15)) +
  labs(x = "x_px", y = "y_px") +
  coord_equal() +
  labs(subtitle = var, color = element_blank()) +
  theme(plot.subtitle = element_text(size = 35, color = "black"),
        text = element_text(color = "black", family = "Times New Roman"))
}
```

## nFeature
```{r}
lapply(nfeat, plotf)
```

## nCount
```{r}
lapply(nCount, plotf)
```

## Median
```{r}
lapply(median, plotf)
```

## Staining
```{r}
lapply(mean, plotf)
```

## Unassigned
```{r}
lapply(unass, plotf)
```



