---
title: "PreProcessing - Flex - Stamp 7b - B1 library"
subtitle: "Emanuele Pitino"
date: "`r Sys.Date()`"
format: 
  html:
    theme: superhero
    smooth-scroll: true
    code-fold: true
    self-contained: true
    toc: true
    toc_float: 
      collapsed: false
      smooth_scroll: true
editor: source
editor_options: 
  chunk_output_type: console
execute:
  echo: true
  fig-width: 12     
  fig-height: 9 
---
This document provides a comprehensive overview of the preprocessing steps performed on the stamp_7b iESCs - B1 library - Flex dataset.

Inputs are Sce objects that were previously quality-controlled separately (outliers on quality metrics + doublets flag). 
The analysis covers the following:
1. Normalization; 2. Feature selection, using highly variable features that were previously identified by modeling the mean-variance relationship in each library separately; 3. Dimensionality reduction, PCA followed by UMAP.

## Setup
### Libraries
```{r}
suppressPackageStartupMessages({
library(SingleCellExperiment)
library(dplyr)
library(here)
library(scater)
library(scuttle)
library(scran)
library(data.table)
library(glue)
library(qs)
library(scales)
})
```

### Paths
```{r}
dir <- glue("{here()}")
source(glue("{dir}/scripts/misc/paths.R"))
source(glue("{dir}/scripts/misc/BIN.R"))

sample <- "B1"
#sample <- "iESC_0h"
stamp <- "Stamp_7b"
#npcs <- params$npcs
dir <- glue("{here()}")
source(glue("{dir}/scripts/misc/paths.R"))
source(glue("{dir}/scripts/misc/BIN.R"))
```

### Load data
```{r}
library(stringr)

tp <- c("0h", "6h", "12h", "24h")
dirs <- list.dirs(glue("{proj_dir}/data/{stamp}/processed/flex"))
dirs <- dirs[str_detect(basename(dirs), paste0("_(", str_c(tp, collapse = "|"), ")$"))]

sce <- list()

sce_list <- lapply(dirs, function(dir) {
  qread(glue("{dir}/clust_sce.qs"), nthreads = 8)
})

# Apply modifications to each element in sce_list
sce_list <- lapply(sce_list, function(tmp) {
  reducedDims(tmp)$PCA <- NULL                # Remove PCA
  reducedDims(tmp)$UMAP <- NULL               # Remove UMAP
  assays(tmp)$logcounts <- NULL               # Remove logcounts
  colnames(tmp) <- paste0(tmp$sample, "_", colnames(tmp))  # Rename barcodes
  rowData(tmp)$scDblFinder.selected <- NULL   # Remove scDblFinder stats from rowData
  metadata(tmp)$scDblFinder.stats <- NULL     # Remove scDblFinder stats from metadata
  metadata(tmp)$scDblFinder.threshold <- NULL # Remove scDblFinder threshold from metadata
  tmp  # Return the modified object
})

sce <- do.call(cbind,sce_list)
sce$library <- sample

rm(sce_list)
gc()
```

# Processing

## LogNorm
```{r}
sce <- logNormCounts(sce)
```

## Feature Selection
```{r}
hvg_list <- metadata(sce)[grep("hvg_", names(metadata(sce)), value = TRUE)]
hvg <- unique(unlist(hvg_list))

set.seed(0010101)
dec.var <- modelGeneVar(sce, BPPARAM = bp) # model gene var
dec.var$hvg <- "no" # Assign to dec.var column for plot
dec.var$hvg[rownames(dec.var) %in% hvg] <- "yes"
gg_hvg <- plot_hvg(dec.var = dec.var, sub = sample) # plot
gg_hvg
```

## PCA

```{r}
set.seed(101001)
sce <- fixedPCA(sce, subset.row = hvg)

num_pcs_to_retain <- 10
percent.var <- attr(reducedDim(sce), "percentVar")

# Create a data frame for ggplot
data <- data.frame(PC = 1:length(percent.var), Variance = percent.var)
# Plot
gg_var <- ggplot(data, aes(x = PC, y = Variance)) +
  geom_point() +
  xlab("PC") +
  ylab("Variance explained (%)") +
  geom_vline(xintercept = num_pcs_to_retain, color = "red") +
  theme_bw()
gg_var
```

```{r}
reducedDim(sce, "PCA") <-  reducedDim(sce, "PCA")[,1:num_pcs_to_retain]
wh(6,5)
gg_pca <- plotPCA(sce, scattermore = TRUE, point_size = 2) + ggtitle("PCA")
gg_pca
```

## Run UMAP
```{r}
set.seed(123)
sce <- runUMAP(sce, dimred="PCA", BPPARAM = bp)
gg_um <- plotReducedDim(sce, "UMAP", scattermore = TRUE, point_size = 2) 
gg_um
```

# Save plots
```{r}
combined <- wrap_plots(gg_var, gg_hvg, gg_pca, gg_um, ncol = 2, nrow = 2) +
  plot_annotation(tag_levels = "A") + 
  plot_annotation(title = glue("Flex - Stamp 7b - {sample}"), subtitle = glue("N = {comma(ncol(sce))} cells"))

plotdir <- glue("{plt_dir}/{stamp}/flex/{sample}")
dir.create(plotdir, showWarnings = F, recursive = T)

pdf(glue("{plotdir}/PreProc_{stamp}_{sample}.pdf"), width = 20, height = 12)
combined
dev.off()
```

# Save data
```{r}
outdir <- glue("{proj_dir}/data/{stamp}/processed/flex/{sample}")
dir.create(outdir, showWarnings = F, recursive = T)
qsave(sce, glue("{outdir}/proc_sce.qs"), nthreads = 8)
```
