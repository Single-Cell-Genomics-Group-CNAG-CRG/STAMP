---
title: "Level2 annotation - stamp11"
subtitle: "Emanuele Pitino"
date: "`r Sys.Date()`"
format: 
  html:
    theme: superhero
    smooth-scroll: true
    code-fold: true
    self-contained: true
    toc: true
    toc_float: 
      collapsed: false
      smooth_scroll: true
params:
  sample: !expr NA
editor: source
editor_options: 
  chunk_output_type: console
execute:
  echo: true
---
```{r}
suppressPackageStartupMessages({
library(SingleCellExperiment)
library(tidyverse)
library(dplyr)
library(here)
library(scater)
library(scuttle)
library(glue)
library(qs)
library(parallel)
library(scran)
library(BiocParallel)
library(BiocNeighbors)
library(BiocSingular)
library(data.table)
})
```

```{r}
dir <- glue("{here()}")
# Parameters and paths
source(glue("{dir}/scripts/misc/paths.R"))
source(glue("{dir}/scripts/misc/BIN.R"))
stamp <- "stamp_12"
sub <- "PBMCs"
lin <- "Myeloid"
sce <- qread(glue("{proj_dir}/data/{stamp}/{sub}/processed/{lin}/clust_sce.qs"), nthreads = 8)
```


```{r}
pal <- Polychrome::createPalette(26,c("#99FFFF", "#FF99FF", "#FFFF99"))
names(pal) <- unique(sce$label)
```

## Clusters analysis
```{r}
markers <- scoreMarkers(sce, sce$label, BPPARAM = bp)

feat <- lapply(markers, function(df) {
  as.data.frame(df) %>%
    arrange(desc(median.logFC.cohen)) %>%
    head(15) %>%
    rownames()
})
feat <- unique(unlist(feat))

feat <- c("IL1B","FCGR3A","CD14","CD1C","CCR2","CD68","ITGAM","CD34","FLT3","CX3CR1","CLEC9A","CCR5",
          "S100A8","S100A9","LYZ","ITGAX", "IL3RA","CD1C","MZB1","KIT")
gg_clust1 <- create_plots2(sce, "label", feat)
```

```{r}
df <- as.data.frame(colData(sce))
gg_clust_2 <- wrap_plots(
    plot_density(df, "sum", "label", pal, "Counts",2000),
    plot_density(df, "detected", "label", pal, "Features",1000),
    plot_density(df, "cell_area", "label", pal, "Cell Area",500),
    plot_density(df, "nucleus_area", "label", pal, "Nucleus Area",80),
    ncol = 2, nrow = 2) +
plot_annotation(tag_levels = "A")
```

## Annotation
Here we want to distinguish main lineages such as T/B lymphocytes and Myeloid cells.
```{r}
sce$lvl2[sce$label == "1"] <- "Classical Monocytes"
sce$lvl2[sce$label == "10"] <- "Classical Monocytes"
sce$lvl2[sce$label == "11"] <- "CDC1+ Dendritic Cells"
sce$lvl2[sce$label == "12"] <- "Plasmablasts"
sce$lvl2[sce$label == "13"] <- "Intermediary Monocytes"
sce$lvl2[sce$label == "2"] <- "Classical Monocytes"

sce$lvl2[sce$label == "3"] <- "Non Classical Monocytes"
sce$lvl2[sce$label == "4"] <- "Non Classical Monocytes"
sce$lvl2[sce$label == "5"] <- "Non Classical Monocytes"

sce$lvl2[sce$label == "6"] <- "IL1B+ Classical Monocytes"
sce$lvl2[sce$label == "7"] <- "IL1B+ Classical Monocytes"
sce$lvl2[sce$label == "8"] <- "IL1B+ Classical Monocytes"
sce$lvl2[sce$label == "9"] <- "Classical Monocytes"
```

```{r}
#sce$lvl2 <- factor(sce$lvl1, levels = c("T","NK","B","Myeloid", "LowQ"))
```


```{r}
pal_lvl2 <- Polychrome::createPalette(26,c("#99FFFF", "#FF99FF", "#FFFF99"))
names(pal_lvl2) <- unique(sce$lvl2)
```

# Find new markers for lvl1
```{r}
markers <- scoreMarkers(sce, sce$lvl2, BPPARAM = bp)

feat <- lapply(markers, function(df) {
  as.data.frame(df) %>%
    arrange(desc(median.logFC.cohen)) %>%
    head(15) %>%
    rownames()
})
feat <- c("IL1B","FCGR3A","CD14","CD1C","CCR2","CD68","ITGAM","CD34","FLT3","CX3CR1","CLEC9A","CCR5",
          "S100A8","S100A9","LYZ","ITGAX")
gg_anno1 <- create_plots2(sce, "lvl2", feat)
```

```{r}
df <- as.data.frame(colData(sce))
gg_anno2 <- wrap_plots(
    plot_density(df, "sum", "lvl2", pal_lvl2, "Counts",2000),
    plot_density(df, "detected", "lvl2", pal_lvl2, "Features",1000),
    plot_density(df, "cell_area", "lvl2", pal_lvl2, "Cell Area",500),
    plot_density(df, "nucleus_area", "lvl2", pal_lvl2, "Nucleus Area",80),
    ncol = 2, nrow = 2) +
plot_annotation(tag_levels = "A")
```

```{r}
outdir <- glue("{plt_dir}/{stamp}/{sub}/{lin}")
if(!dir.exists(paste0(outdir))){
  dir.create(outdir)
}
pdf(paste0(outdir,"/lvl2.pdf"), width = 12, height = 8)
gg_clust1
gg_clust_2
gg_anno1
gg_anno2
dev.off()
```


```{r}
res_dir <- glue("{proj_dir}/data/{stamp}/{sub}/processed/{lin}")
qsave(sce, glue("{res_dir}/lvl1_sce.qs"), nthreads = 8)
```
