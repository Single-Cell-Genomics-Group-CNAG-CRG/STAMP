---
title: "QC - stamp5"
subtitle: "Emanuele Pitino"
date: "`r Sys.Date()`"
format: 
  html:
    theme: superhero
    smooth-scroll: true
    code-fold: true
    self-contained: true
    toc: true
    toc_float: 
      collapsed: false
      smooth_scroll: true
params:
  sample: !expr NA
editor: source
editor_options: 
  chunk_output_type: console
execute:
  echo: true
---


# Libraries
```{r}
suppressPackageStartupMessages({
library(SingleCellExperiment)
library(tidyverse)
library(dplyr)
library(here)
library(scater)
library(scuttle)
library(glue)
library(qs)
library(parallel)
library(scran)
library(BiocParallel)
library(BiocNeighbors)
library(BiocSingular)
library(data.table)
})
```

## Paths

```{r}
dir <- glue("{here()}")
source(glue("{dir}/scripts/misc/paths.R"))
source(glue("{dir}/scripts/misc/BIN.R"))
```

## Load data
```{r}
res_dir <- paste0(proj_dir, "/data/stamp_5/processed")
sce <- qread(glue("{res_dir}/raw_sce.qs"), nthreads = 8)
```


# Add QC metrics
```{r}
sce <- addPerCellQCMetrics(sce)
```

## Remove empty cells
```{r}
sce <- sce[,sce$sum > 0 & sce$detected > 0]
```

```{r}
sce
```

```{r}
discard_sum <- isOutlier(sce$sum, 
                         type = "both", 
                         log = TRUE,
                         nmads = 2.5)
# Detected outliers
discard_detected <- isOutlier(sce$detected, 
                         type = "both", 
                         log = TRUE,
                         nmads = 2.5)
# Detected outliers
discard_area <- isOutlier(sce$cell_area, 
                         type = "both", 
                         log = T,
                         nmads = 2.5)
```

```{r}
extr_thr <- function(df){
return <- list()
lower <- round(attr(df, 'thresholds')['lower'],0)
higher <- round(attr(df, 'thresholds')['higher'],0)
return(c(lower,higher))
}
```

```{r}
gg_hist <- function(df, outliers, var, title) {
  sum_thr <- extr_thr(outliers)
  median_val <- round(median(df[[var]]), 2)

  plot <- ggplot(df, aes_string(x = var)) + 
              geom_histogram()  + 
              geom_vline(xintercept = sum_thr, linetype = "dashed", color = "red") + 
              theme_bw() +
              theme(axis.text = element_text(size = 10, color = "black"),
                    text = element_text(size = 15, color = "black"),
                    plot.subtitle = element_text(size = 12),
                    panel.grid = element_blank()) +
              labs(title = "", 
                   y = "", x = title,
                   subtitle = glue::glue("Median: {number(median_val, big.mark = '.')}; Lower thr: {number(sum_thr[1], big.mark = '.')}; Higher thr: {number(sum_thr[2], big.mark = '.')}")) + 
              scale_x_log10()
   return(plot)
}
```

```{r}
suppressWarnings({
df <- as.data.frame(colData(sce))

#df <- df[df$sum > 100 & df$detected > 100 & df$Area.um2 > 30,]

gg_qc_metrics <- wrap_plots(
                gg_hist(df, discard_sum, "sum", "nCounts"),
                gg_hist(df, discard_detected, "detected", "nFeatures"),
                gg_hist(df, discard_area, "cell_area", "Area.um2"),
                ncol = 3)
})
```

```{r}
scientific_10 <- function(x) {
  parse(text=gsub("e\\+?0?", " %*% 10^", scales::scientific_format()(x)))
}

plot_hist_with_median_ggplot <- function(data, outliers, column_name, xlab, xlim_value) {
  values <- data[[column_name]]
  median_value <- round(median(values), 0)
  sum_thr <- extr_thr(outliers)
  
  ggplot(data, aes(x = values)) +
    geom_histogram(fill = "lightgrey", color = "black", alpha = 0.5) +
    geom_vline(xintercept = median_value, color = "red", size = 1) +
    labs(x = xlab, y = "Frequency", title = "", subtitle = paste("Median:", median_value)) +
    scale_x_continuous(labels = scientific_10, limits = c(0, xlim_value)) +  # Use limits in scale_x_continuous
    scale_y_continuous(labels = scientific_10) +
    theme_bw() +
    theme(panel.grid = element_blank(), text = element_text(size = 15, color = "black"),
          axis.text = element_text(size = 10, color = "black"))
}

qc_metrics <- wrap_plots(
                plot_hist_with_median_ggplot(df, discard_sum, "sum", "nCount", 200),
                plot_hist_with_median_ggplot(df, discard_detected, "detected", "nFeature", 100),
                plot_hist_with_median_ggplot(df, discard_area, "cell_area", "Area.um2", 100),
                ncol = 1) +
                plot_layout(axis_titles = "collect")
```

```{r}
figdir <- glue("{proj_dir}/figures/fig3/raw")
dir.create(figdir, showWarnings = F, recursive = T)
pdf(file = glue("{figdir}/qc_hist.pdf"), width = 4, height = 9)
qc_metrics
dev.off()

figrds <- glue("{proj_dir}/figures/fig3/rds")
dir.create(figrds, showWarnings = F, recursive = T)
saveRDS(qc_metrics, glue("{figrds}/qc.rds"))
```

```{r}
filt <- sce[,sce$sum > as.numeric(attr(discard_sum, "threshold")["lower"]) &
             sce$sum < as.numeric(attr(discard_sum, "threshold")["higher"]) &
             sce$detected > as.numeric(attr(discard_detected, "threshold")["lower"]) &
             sce$detected < as.numeric(attr(discard_detected, "threshold")["higher"]) &
             sce$cell_area < as.numeric(attr(discard_area, "threshold")["higher"])]
```

```{r}
qsave(filt, glue("{res_dir}/sce_filt.qs"), nthreads  = 8)
```

```{r}
sessionInfo()
```

